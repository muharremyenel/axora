name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    runs-on: ubuntu-22.04
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: axora_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        
      mailhog:
        image: mailhog/mailhog
        ports:
          - 1025:1025
          - 8025:8025

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run Backend Tests
      working-directory: ./backend
      env:
        SPRING_PROFILES_ACTIVE: test
        JWT_SECRET: test-secret-key-for-ci
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: axora_db
        DB_USER: postgres
        DB_PASSWORD: postgres
        MAIL_HOST: localhost
        MAIL_PORT: 1025
        RABBITMQ_HOST: localhost
        RABBITMQ_PORT: 5672
      run: |
        mvn test jacoco:report
        mvn jacoco:check -Djacoco.minimum.coverage=0.70
        
    - name: Upload Test Coverage
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage
        path: backend/target/site/jacoco/

  frontend-test:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
        
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install
        
    - name: Run Frontend Tests
      working-directory: ./frontend
      env:
        VITE_API_URL: http://localhost:8080
        VITE_WS_URL: ws://localhost:8080/ws
        VITE_APP_NAME: Axora
        VITE_APP_VERSION: 1.0.0
        VITE_ENABLE_NOTIFICATIONS: true
        VITE_ENABLE_WEBSOCKET: true
      run: |
        npm run test:coverage
        
    - name: Upload Frontend Coverage
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage
        path: frontend/coverage/

  build:
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build Backend
      working-directory: ./backend
      run: mvn clean package -DskipTests
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Build Frontend
      working-directory: ./frontend
      run: |
        npm install
        npm run build
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          backend/target/*.jar
          frontend/dist